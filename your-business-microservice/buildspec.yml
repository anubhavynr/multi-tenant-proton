version: 0.2
phases:
  install:
    runtime-versions:
        docker: 18
    commands:
        - pip3 install --upgrade --user awscli
        - wget -O /tmp/yq_linux_amd64.tar.gz https://github.com/mikefarah/yq/releases/download/v4.11.2/yq_linux_amd64.tar.gz
        - tar -xvzf /tmp/yq_linux_amd64.tar.gz && mv yq_linux_amd64 /usr/bin/yq
  pre_build:
    commands:
        - cd $CODEBUILD_SRC_DIR
        - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

  build:
    commands:
        - IMAGE_REPO_NAME=$repo_name
        - IMAGE_TAG=$CODEBUILD_BUILD_NUMBER
        - IMAGE_ID=$aws_account_id.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
        - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG -f $dockerfile .
        - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_ID;
        - docker push $IMAGE_ID

  post_build:
    commands:
        - aws proton --endpoint-url https://proton.$AWS_DEFAULT_REGION.amazonaws.com --region $AWS_DEFAULT_REGION get-service --name $service_name | jq -r .service.spec > service.yaml
        - cat service.yaml
        - yq -V
        - yq -i '.instances[0].spec.image = strenv($IMAGE_ID)' service.yaml > rendered_service.yaml
        - cat rendered_service.yaml

artifacts:
  discard-paths: yes
  files:
    # List of local artifacts that will be passed down the pipeline
    - rendered_service.yaml